{"ast":null,"code":"/* eslint-disable */\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  loading: false,\n  error: \"\",\n  membersFullInfo: [],\n  uploadedImage: {\n    \"originalname\": \"\",\n    \"filename\": \"\",\n    \"dirname\": \"\",\n    \"success\": false\n  }\n};\nexport const governmentMembersFullInfo = createSlice({\n  name: \"membersFullInfo\",\n  initialState,\n  reducers: {\n    successLoading: state => {\n      state.loading = true;\n    },\n    successFullfit: (state, action) => {\n      state.loading = false;\n      state.membersFullInfo = action.payload;\n    },\n    successError: (state, action) => {\n      state.error = action.payload.message;\n    },\n    addMember: (state, action) => {\n      state.membersFullInfo.push(action.payload);\n      state.uploadedImage = {\n        \"originalname\": \"\",\n        \"filename\": \"\",\n        \"dirname\": \"\",\n        \"success\": false\n      };\n    },\n    deleteMember: (state, action) => {\n      state.membersFullInfo = state.membersFullInfo.filter(item => {\n        return item.id !== action.payload;\n      });\n    },\n    editeMember: (state, action) => {\n      state.membersFullInfo = state.membersFullInfo.map(member => {\n        if (member.id == action.payload[0].id) {\n          member = action.payload[0];\n        }\n        state.uploadedImage = {\n          \"originalname\": \"\",\n          \"filename\": \"\",\n          \"dirname\": \"\",\n          \"success\": false\n        };\n        return member;\n      });\n    },\n    activeMember: (state, action) => {\n      state.membersFullInfo = state.membersFullInfo.map(member => {\n        if (member.id == action.payload) {\n          if (member.status === \"active\") {\n            member.status = \"passive\";\n          }\n        }\n        return member;\n      });\n    },\n    setImage: (state, action) => {\n      state.uploadedImage = action.payload || {};\n    },\n    deleteUploadImage: state => {\n      state.uploadedImage = {\n        \"originalname\": \"\",\n        \"filename\": \"\",\n        \"dirname\": \"\",\n        \"success\": false\n      };\n    }\n  }\n});\nexport const {\n  deleteUploadImage,\n  successError,\n  successFullfit,\n  addMember,\n  deleteMember,\n  successLoading,\n  editeMember,\n  activeMember,\n  setImage\n} = governmentMembersFullInfo.actions;\nexport default governmentMembersFullInfo.reducer;","map":{"version":3,"names":["createSlice","initialState","loading","error","membersFullInfo","uploadedImage","governmentMembersFullInfo","name","reducers","successLoading","state","successFullfit","action","payload","successError","message","addMember","push","deleteMember","filter","item","id","editeMember","map","member","activeMember","status","setImage","deleteUploadImage","actions","reducer"],"sources":["/home/sergey/Desktop/project/FinalProject/src/store/slices/GovernmetMembersFullInfo.ts"],"sourcesContent":["/* eslint-disable */\nimport { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport { IMemberFullInfo } from \"../../types/models\";\n\nconst initialState = {\n    loading: false,\n    error: \"\",\n    membersFullInfo: <IMemberFullInfo[]>[],\n    uploadedImage: {\n        \"originalname\": \"\",\n        \"filename\": \"\",\n        \"dirname\": \"\",\n        \"success\": false\n    }\n}\n\nexport const governmentMembersFullInfo = createSlice({\n    name: \"membersFullInfo\",\n    initialState,\n    reducers: {\n        successLoading: (state) => {\n            state.loading = true;\n        },\n        successFullfit: (state, action: PayloadAction<[]>) => {\n            state.loading = false;\n            state.membersFullInfo = action.payload;\n        },\n        successError: (state, action: PayloadAction<Error>) => {\n            state.error = action.payload.message;\n        },\n        addMember: (state, action) => {\n            state.membersFullInfo.push(action.payload);\n           state.uploadedImage={\n                \"originalname\": \"\",\n                \"filename\": \"\",\n                \"dirname\": \"\",\n                \"success\": false\n            }\n        },\n        deleteMember: (state, action) => {\n            state.membersFullInfo = state.membersFullInfo.filter((item) => {\n                return item.id !== action.payload;\n            })\n        },\n        editeMember: (state, action) => {\n            \n            state.membersFullInfo = state.membersFullInfo.map((member) => {\n                if (member.id == action.payload[0].id) {\n                    member = action.payload[0];\n                }\n                state.uploadedImage={\n                    \"originalname\": \"\",\n                    \"filename\": \"\",\n                    \"dirname\": \"\",\n                    \"success\": false\n                }\n                return member;\n            })\n        },\n        activeMember: (state, action) => {\n            state.membersFullInfo = state.membersFullInfo.map((member) => {\n                if (member.id == action.payload) {\n                    if (member.status === \"active\") {\n                        member.status = \"passive\"\n                    }\n                }\n                return member;\n            });\n        },\n        setImage: (state, action) => {\n            state.uploadedImage = action.payload || {};\n        },\n        deleteUploadImage:(state) => {\n            state.uploadedImage={\n                \"originalname\": \"\",\n                \"filename\": \"\",\n                \"dirname\": \"\",\n                \"success\": false\n            }\n        }\n    }\n\n});\nexport const {deleteUploadImage, successError, successFullfit, addMember, deleteMember, successLoading, editeMember, activeMember, setImage } = governmentMembersFullInfo.actions;\nexport default governmentMembersFullInfo.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}