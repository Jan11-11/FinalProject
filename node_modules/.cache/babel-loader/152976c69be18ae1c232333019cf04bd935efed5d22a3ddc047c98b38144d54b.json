{"ast":null,"code":"/* eslint-disable */\n\nimport { successError, successFullfit, successLoading } from \"../slices/GovernmetMembersFullInfo\";\nimport axios from \"axios\";\nconst URL = process.env.REACT_APP_BASE_URL1;\nexport const fetchGovernmentMemberFullInfo = () => {\n  return async dispatch => {\n    try {\n      dispatch(successLoading());\n      const response = await axios.get(`${URL}/api/v1/users/fullList`);\n      conso;\n      if (response.status === 200 && response.statusText === \"OK\") {\n        dispatch(successFullfit(response.data));\n      }\n    } catch (error) {\n      dispatch(successError(error));\n    }\n  };\n};\nexport const fetchGovernmentMembersInfo = () => {\n  return async dispatch => {\n    try {\n      dispatch(successLoading());\n      const response = await axios.get(`${URL}/api/v1/users`);\n      if (response.status === 200 && response.statusText === \"OK\") {\n        dispatch(successFullfit(response.data));\n      }\n    } catch (error) {\n      dispatch(successError(error));\n    }\n  };\n};","map":{"version":3,"names":["successError","successFullfit","successLoading","axios","URL","process","env","REACT_APP_BASE_URL1","fetchGovernmentMemberFullInfo","dispatch","response","get","conso","status","statusText","data","error","fetchGovernmentMembersInfo"],"sources":["C:/Users/ASUS/Desktop/government/governmentProject/FinalProject/src/store/actions/governmentMembersFullInfoAction.ts"],"sourcesContent":["/* eslint-disable */\r\nimport { Dispatch } from \"@reduxjs/toolkit\";\r\nimport { successError, successFullfit, successLoading } from \"../slices/GovernmetMembersFullInfo\";\r\nimport axios from \"axios\";\r\nconst URL = process.env.REACT_APP_BASE_URL1;\r\n\r\nexport const fetchGovernmentMemberFullInfo = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(successLoading());\r\n            const response = await axios.get(`${URL}/api/v1/users/fullList`);\r\n            conso\r\n            if (response.status === 200 && response.statusText === \"OK\") {\r\n                dispatch(successFullfit(response.data));\r\n            }\r\n        } catch (error) {\r\n            dispatch(successError(error as Error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchGovernmentMembersInfo = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(successLoading());\r\n            const response = await axios.get(`${URL}/api/v1/users`);\r\n\r\n            if (response.status === 200 && response.statusText === \"OK\") {\r\n                dispatch(successFullfit(response.data));\r\n            }\r\n        } catch (error) {\r\n\r\n            dispatch(successError(error as Error))\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA;;AAEA,SAASA,YAAY,EAAEC,cAAc,EAAEC,cAAc,QAAQ,oCAAoC;AACjG,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AAE3C,OAAO,MAAMC,6BAA6B,GAAG,MAAM;EAC/C,OAAO,MAAOC,QAAkB,IAAK;IACjC,IAAI;MACAA,QAAQ,CAACP,cAAc,EAAE,CAAC;MAC1B,MAAMQ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,GAAI,wBAAuB,CAAC;MAChEQ,KAAK;MACL,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIH,QAAQ,CAACI,UAAU,KAAK,IAAI,EAAE;QACzDL,QAAQ,CAACR,cAAc,CAACS,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZP,QAAQ,CAACT,YAAY,CAACgB,KAAK,CAAU,CAAC;IAC1C;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,0BAA0B,GAAG,MAAM;EAC5C,OAAO,MAAOR,QAAkB,IAAK;IACjC,IAAI;MACAA,QAAQ,CAACP,cAAc,EAAE,CAAC;MAC1B,MAAMQ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,GAAI,eAAc,CAAC;MAEvD,IAAIM,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIH,QAAQ,CAACI,UAAU,KAAK,IAAI,EAAE;QACzDL,QAAQ,CAACR,cAAc,CAACS,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MAEZP,QAAQ,CAACT,YAAY,CAACgB,KAAK,CAAU,CAAC;IAC1C;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}